---
title: "Weekly CBA Report"
subtitle: "2024 Season"
format:
  html:
      df-print: paged
      theme: cosmo
      toc: true
      self-contained: true
editor: visual
author: James Brown
echo: false
warning: false
message: false
---

```{r}
# Libraries and functions
library(tidyverse)
library(qreport)
library(kableExtra)
library(fitzRoy)

# Load data processing functions
source("../Functions/data_processing_functions.R")
```

## CBAs

```{r}
#| results: asis

# Get latest round
current_round <- fetch_fixture()$compSeason.currentRoundNumber[[1]]

# Get Data
current_round_data <- get_fantasy_data(season = 2024, round_number = current_round - 1)

# Get only players with at least one CBA
current_round_cbas <-
current_round_data |>
  select(Player = player_full_name,
         Team = player_team,
         Opposition = opposition_team,
         CBAs = cbas,
         `CBA %` = cba_percentage) |> 
  filter(`CBA %` > 0) |> 
  arrange(Team, desc(`CBA %`)) |> 
  mutate(`CBA %` = (100*`CBA %`) |> round(2))

# Output each team DF
cba_list <-
map(
  unique(current_round_cbas$Team),
  ~ current_round_cbas |> filter(Team == .x)
) |> 
  set_names(unique(current_round_cbas$Team))

# Make tabset with each team's CBAs
maketabs(cba_list, wide = FALSE)
```

## Kick-ins

```{r}
#| results: asis

# Get only players with at least one kickin
current_round_kickins <-
current_round_data |>
  select(Player = player_full_name,
         Team = player_team,
         Opposition = opposition_team,
         Kickins = kick_ins,
         `Kickins (Play On)` = kick_ins_play_on,
         `Kickin %` = kick_in_percentage) |> 
  filter(Kickins > 0) |> 
  group_by(Team) |> 
  arrange(Team, desc(`Kickin %`)) |> 
  mutate(`Kickin %` = (100*`Kickin %`) |> round(2))

# Output each team DF
kickin_list <-
map(
  unique(current_round_kickins$Team),
  ~ current_round_kickins |> filter(Team == .x)
) |> 
  set_names(unique(current_round_kickins$Team))

# Make tabset with each team's Kickins
maketabs(kickin_list, wide = FALSE)

```
